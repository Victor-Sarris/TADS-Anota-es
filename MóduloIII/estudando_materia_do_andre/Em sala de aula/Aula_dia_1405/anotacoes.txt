// No caso, aqui a gente vai codificar as sub-arvores de uma arvore. No caso da imagem 1, vamos fazer o seguinte:

struct no{
    char conteudo;
    struct no * sae; //sae = sub-arvore da esquerda
    struct no * sad; // sad = sub-arvore da direita
};

typedef struct no No; // aqui no caso estamos definindo as o tipo das estrutura

// no caso de uma arvore que tem uma sub-arvore, apontamos o n√≥ para "null"
// para conferir se um n√≥ √© uma folha, devemos conferir se esse n√≥ tem sub-arvores, caso n√£o tenha (ou seka, o valor seja null), ela √© uma folha

-- observa√ßoes do professor

// vamos criar um metodo para criar n√≥s nessa arvore
// vamos fazer o m√©todo primeiro para depois fazer o main

No * criar(char *c, No * e, No * d){
    No * arv = malloc(sizeof(No));                // alocamento de memoria
    arv->conteudo = c;
    arv->sae = e;
    arv->sad = d;

    return arv;
}

// 2.jpg/3.jpg ‚òùÔ∏èü™Ω
// algo interessante na criacao de arvores, √© que comecamos apenas com as cricaos das folhas, ou seja, obrigatoriamente os campos da esquerda e da direita sao nulos, ou seja, nao precisamos declarar. 
// para a criacao das folhas, vamos criar uma variavel para cada folha. Exemplo:

main(){
    No * a1 = criar('d', null, null); // precisa colocar entre aspas simples porque ele √© caracter
    No * a2 = criar('e', null, null);
    No * a3 = criar('f', null, null);
    No * a4 = criar('b', null, a1); // no caso, 'a1' porque √© ele √© um n√≥ do tipo varchar. No caso, precisamos chamar o endereco de memoria dele para poder referencialo
    No * a5 = criar('c', a2, a3);
    No * a6 = criar('a', a4, a5);
}

// imagem 4.jpg ‚òùÔ∏è
// no caso, criar a estrutura de uma arvore assim seria inviavel na criacao de uma arvore gigante ‚òùÔ∏è
// metodos como 'criar' √© para coisas mais simples, podemos criar metodos para inserir n√≥s em uma arvore
// no caso, a 5.pgn representa como seria a nossa arvore criada com a funcao de criacao

// no caso, uma coisa tambem interessante, mas tambem aparentemente muito dificil, √© o fato de que podemos criar uma arvore somente com uma variavel. Exemplo abaixo üëá

No * arvore = criar('a', criar('b', null, criar('d', null, null)), criar('c', criar('e', null, null), criar('f', null, null)));

// imagem do quadro: 6.jpg
// meu amigo, estou com fome, coringando, morrendo de fome, eu vou enlouquecer se uma quest√£o dessa aparecer na prova, puta que pariu mermao